---
title: "Tabla_trabajo_final"
format: html
editor: visual
---

## 

```{r}
# Lectura data frame airbnb.

library(readr)
df_airbnb_origin <- read_delim("Documents/Bootcamp/PROYECTO FINAL/airbnb-listings.csv", delim = ";", escape_double = FALSE, na = "NA", trim_ws = TRUE)

# Visualizado de datos que contienen las variables.
head(df_airbnb_origin)
```

```{r}
#Filtrados columnas de trabajo.

df_airbnb_colm <- select (df_airbnb_origin,'ID', 'Host ID', 'Host Since','Host Location', 'Host Response Time', 'Host Response Rate','Host Listings Count','Host Total Listings Count','Neighbourhood Cleansed', 'Neighbourhood Group Cleansed', 'City','State', 'Zipcode', 'Market', 'Smart Location', 'Country Code','Country','Latitude', 'Longitude', 'Property Type', 'Room Type','Accommodates', 'Bathrooms', 'Bedrooms', 'Beds', 'Bed Type','Amenities','Square Feet','Price', 'Weekly Price','Monthly Price','Security Deposit','Cleaning Fee', 'Guests Included', 'Extra People','Minimum Nights', 'Maximum Nights', 'Number of Reviews','Review Scores Rating', 'Review Scores Accuracy','Review Scores Cleanliness','Review Scores Checkin', 'Review Scores Communication','Review Scores Location','Review Scores Value', 'Cancellation Policy','Calculated host listings count','Reviews per Month','Features')
```

```{r}
library(tidyverse)
library(janitor)
df_airbnb_colm <- clean_names(df_airbnb_colm, case = c("snake"))

```

```{r}
# Veo resumen de variables. Parece que los tipos son correctos aunque hay algunas con NA altos.

summary(df_airbnb_colm)
```

```{r}
#Comprabar por columnas los na

apply(X = is.na(df_airbnb_colm), MARGIN = 2, FUN = sum)
```
```{r}
# Columnas con NA elevados: Square Feet, Weekly Price, Monthly Price, Segurity_Deposit, Cleaning_Fee y las Reviews. Análizar más adelante si hay que tratarlos como NA o como valores a 0.

```

```{r}
df_airbnb_colm %>% count (`neighbourhood_cleansed`, sort = TRUE) 
df_airbnb_colm %>% count (`neighbourhood_group_cleansed`, sort = TRUE) 
df_airbnb_colm %>% count (`city`, sort = TRUE) 
df_airbnb_colm %>% count (`state`, sort = TRUE) 
df_airbnb_colm %>% count (`smart_location`, sort = TRUE) 
df_airbnb_colm %>% count (`country_code`, sort = TRUE) 

# Los NA calculados son correctos, sin embargo hay campos que vienen con muchos registros vacíos. Revisar más adelante.
# Hago agrupados de ciudad, estado, Smart Location y veo que hay más ciudades que Madrid.
# Hago agrupado por país y veo que hay más países que España
```

```{r}
# Identifico con un booleano lo que es Madrid por la latitud de las coordenadas.
df_airbnb_colm$is_madrid <- substr(df_airbnb_colm$latitude, start = 1, stop = 2) =='40'
```

```{r}
# Filtro solo Madrid.

df_airbnb_madrid <- df_airbnb_colm[df_airbnb_colm$is_madrid == TRUE,]

```

```{r}
# Compruebo si estas dos variables tienen la misma información.
isTRUE(df_airbnb_madrid$host_listings_count == df_airbnb_madrid$host_total_listings_count)
```

```{r}
# Elimino la fecha desde la que es hospedador porque no hay referencia de otras fechas para ver algo, ni histórico.

#También quito donde vive el propietario porque el objetivo es mostrar nuestro servicio al cliente final y poco le importa donde estén los otros propietarios.

# Elimino neighbourhood porque tiene muchos campos en blanco.

#Elimino city, state, zipcode, market, smart location, country, contry code porque vamos atrabajar solo con Madrid y ya lo tengo filtrado.

# Elimino square feet por los NA.

# Elimino precio semanal y mensual porque en realidad no vamos a hacer uso de él.

# Elimino amenities porque no sigue una secuencia estándar, llevaría mucho trabajo limpiar y tampoco aporta mucho valor.

df_airbnb_madrid_v2 <- select(df_airbnb_madrid,'id', 'host_id', 'host_response_time', 'host_response_rate','host_listings_count', 'host_total_listings_count','calculated_host_listings_count','neighbourhood_cleansed','latitude','longitude','property_type','room_type', 'accommodates','bathrooms','bedrooms','beds', 'bed_type','security_deposit', 'cleaning_fee','guests_included', 'extra_people', 'minimum_nights','number_of_reviews','number_of_reviews', "review_scores_rating", "review_scores_accuracy","review_scores_cleanliness","review_scores_checkin","review_scores_communication","review_scores_location","review_scores_value","cancellation_policy","reviews_per_month")
```

```{r}
# calcular ID por hospedador para saber si está gestionado por una profesional, agrupar el tiempo y tasa de respuesta y ver si las mejores tasas se corresponden con gestores. 

library (dplyr)
host_houses <- df_airbnb_madrid_v2 %>% group_by(df_airbnb_madrid_v2$host_id) %>% summarise(n_houses= n(), .groups = 'drop')

host_houses$n_houses <- sort(host_houses$n_houses, decreasing = TRUE)
```


```{r}
filter(df_airbnb_madrid_v2,df_airbnb_madrid_v2$host_id == 5542111)

# Compruebo que el campo calculated host listing recoge las viviendas de cada alquilador. Host listing count y total host listing count no tiene la información correcta, así que lo elimino y me quedo solo con el campo calcupado.
```
```{r}
df_airbnb_madrid_v2 <- select(df_airbnb_madrid,'id', 'host_id', 'host_response_time', 'host_response_rate','neighbourhood_cleansed','latitude','longitude','property_type','room_type', 'accommodates','bathrooms','bedrooms','beds', 'bed_type','security_deposit', 'cleaning_fee','guests_included', 'extra_people', 'minimum_nights','number_of_reviews','number_of_reviews', "review_scores_rating", "review_scores_accuracy","review_scores_cleanliness","review_scores_checkin","review_scores_communication","review_scores_location","review_scores_value","cancellation_policy","calculated_host_listings_count","reviews_per_month")
```

```{r}
df_airbnb_madrid_v2[order(df_airbnb_madrid_v2$calculated_host_listings_count, decreasing = TRUE),]      
```
